name: CI Pipeline
on: [push, pull_request]

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  build-test-sign:
    runs-on: ubuntu-latest
    permissions:
      security-events: write # Required for SARIF upload

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python (for Semgrep)
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep and generate reports
        run: |
          semgrep --config p/default --json > semgrep-report.json
          semgrep --config p/default --sarif > semgrep-report.sarif

      - name: Upload Semgrep SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep-report.sarif

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master

      - name: Dependency Scan
        run: |
          curl -LO https://github.com/jeremylong/DependencyCheck/releases/download/v7.4.0/dependency-check-7.4.0-release.zip
          unzip dependency-check-7.4.0-release.zip
          npm install  # <-- Ensure node_modules exists
          ./dependency-check/bin/dependency-check.sh -s . -f JSON -o ./dc-report --disableAssembly
    
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
    
      
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}
      
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM
        run: syft ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} -o spdx-json > sbom.json

      - name: Sign Image
        run: cosign sign --key env://COSIGN_PRIVATE_KEY ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}

      - name: Push Image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}
      
      - name: Trigger Jenkins Job
        uses: appleboy/jenkins-action@master
        with:
          url: ${{ secrets.JENKINS_URL }}
          user: ${{ secrets.JENKINS_USER }}
          token: ${{ secrets.JENKINS_API_TOKEN }}
          job: "deploy-to-eks"
